<?xml version="1.0" encoding="UTF-8" ?>
<?xaml-comp compile="true" ?>
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">

    <!-- ActivityIndicator now uses AppForegroundColor for better theme adaptation -->
    <Style TargetType="ActivityIndicator">
        <Setter Property="Color" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="IndicatorView">
        <Setter Property="IndicatorColor" Value="{AppThemeBinding Light={StaticResource Gray200}, Dark={StaticResource Gray600}}"/>
        <Setter Property="SelectedIndicatorColor" Value="{DynamicResource AppForegroundColor}"/>
    </Style>

    <Style TargetType="Border">
        <!-- Border color might depend on the surface it's on -->
        <Setter Property="Stroke" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="StrokeShape" Value="Rectangle"/>
        <Setter Property="StrokeThickness" Value="1"/>
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <!-- Ensure border BG is transparent -->
    </Style>

    <Style TargetType="BoxView">
        <!-- BoxView color might need context, default to secondary text color -->
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSecondaryTextColor}" />
    </Style>

    <Style TargetType="CheckBox">
        <!-- Use Primary color for the check itself, text color follows Label style -->
        <Setter Property="Color" Value="{StaticResource Primary}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Color" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="DatePicker">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Give it a surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}"/>
                            <!-- Use a fixed disabled color -->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Editor">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Give it a surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}"/>
                            <!-- Use a fixed disabled color -->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Entry">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Give it a surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}"/>
                            <!-- Use a fixed disabled color -->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Frame">
        <Setter Property="HasShadow" Value="False" />
        <!-- Border slightly lighter than surface -->
        <Setter Property="BorderColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="CornerRadius" Value="8" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
    </Style>

    <Style TargetType="ImageButton">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="BorderColor" Value="Transparent"/>
        <Setter Property="BorderWidth" Value="0"/>
        <Setter Property="CornerRadius" Value="0"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="Opacity" Value="0.5" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="PointerOver" />
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Base Style for Label with Explicit Key -->
    <Style TargetType="Label" x:Key="BaseLabelStyle">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="BackgroundColor" Value="Transparent" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <!-- Implicit Style for Label (inherits from BaseLabelStyle) -->
    <Style TargetType="Label" BasedOn="{StaticResource BaseLabelStyle}" />

    <!-- Specific Label Styles using DynamicResource and Explicit Base -->
    <Style TargetType="Label" x:Key="Headline" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Redundant if BaseLabelStyle has it, but safe -->
        <Setter Property="FontSize" Value="32" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <Style TargetType="Label" x:Key="SubHeadline" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Redundant if BaseLabelStyle has it, but safe -->
        <Setter Property="FontSize" Value="24" />
        <Setter Property="HorizontalOptions" Value="Center" />
        <Setter Property="HorizontalTextAlignment" Value="Center" />
    </Style>

    <Style TargetType="Label" x:Key="LightGrayLabel" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
    </Style>

    <Style TargetType="Label" x:Key="WhiteSmokeLabel" BasedOn="{StaticResource BaseLabelStyle}">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="Span">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="ListView">
        <Setter Property="SeparatorColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="RefreshControlColor" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="Picker">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="TitleColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="TitleColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}"/>
                            <!-- Fixed disabled color -->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ProgressBar">
        <Setter Property="ProgressColor" Value="{StaticResource Primary}" />
        <!-- Keep primary for accent -->
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}"/>
        <!-- Background matches surface -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="ProgressColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RadioButton">
        <Setter Property="BackgroundColor" Value="Transparent"/>
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Text color from theme -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="RefreshView">
        <Setter Property="RefreshColor" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="SearchBar">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="CancelButtonColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SearchHandler">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <Setter Property="FontFamily" Value="OpenSansRegular" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Shadow">
        <Setter Property="Radius" Value="15" />
        <Setter Property="Opacity" Value="0.5" />
        <!-- Shadow color might need adjustment based on theme -->
        <Setter Property="Brush" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="Offset" Value="10,10" />
    </Style>

    <Style TargetType="Slider">
        <Setter Property="MinimumTrackColor" Value="{StaticResource Primary}" />
        <!-- Accent -->
        <Setter Property="MaximumTrackColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="ThumbColor" Value="{StaticResource Primary}" />
        <!-- Accent -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="MinimumTrackColor" Value="{DynamicResource AppSecondaryTextColor}"/>
                            <Setter Property="MaximumTrackColor" Value="{DynamicResource AppSecondaryTextColor}"/>
                            <Setter Property="ThumbColor" Value="{DynamicResource AppSecondaryTextColor}"/>
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="SwipeItem">
        <!-- Use surface color for SwipeItem background -->
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
    </Style>

    <Style TargetType="Switch">
        <Setter Property="OnColor" Value="{StaticResource Primary}" />
        <!-- Accent -->
        <Setter Property="ThumbColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Thumb matches text -->
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="ThumbColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="On">
                        <VisualState.Setters>
                            <Setter Property="OnColor" Value="{StaticResource Primary}" />
                            <Setter Property="ThumbColor" Value="{DynamicResource AppForegroundColor}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Off">
                        <VisualState.Setters>
                            <!-- Use a grayed-out version of the foreground color -->
                            <Setter Property="ThumbColor" Value="{DynamicResource AppSecondaryTextColor}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="TimePicker">
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}"/>
        <!-- Surface color -->
        <Setter Property="FontFamily" Value="OpenSansRegular"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}"/>
                            <!-- Fixed disabled color -->
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="Page" ApplyToDerivedTypes="True">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="BackgroundColor" Value="{DynamicResource AppBackgroundColor}" />
    </Style>

    <Style TargetType="Shell" ApplyToDerivedTypes="True">
        <Setter Property="Shell.BackgroundColor" Value="{DynamicResource AppBackgroundColor}" />
        <Setter Property="Shell.ForegroundColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Main text/icon color -->
        <Setter Property="Shell.TitleColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="Shell.DisabledColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="Shell.UnselectedColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="Shell.NavBarHasShadow" Value="False" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <!-- Surface for tab bar -->
        <Setter Property="Shell.TabBarForegroundColor" Value="{StaticResource Primary}" />
        <!-- Accent for selected tab -->
        <Setter Property="Shell.TabBarTitleColor" Value="{StaticResource Primary}" />
        <!-- Accent for selected tab title -->
        <Setter Property="Shell.TabBarUnselectedColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="Shell.FlyoutBackgroundColor" Value="{DynamicResource AppSurfaceColor}"/>
        <!-- Flyout uses surface color -->
    </Style>

    <Style TargetType="NavigationPage">
        <Setter Property="BarBackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <Setter Property="BarTextColor" Value="{DynamicResource AppForegroundColor}" />
        <Setter Property="IconColor" Value="{DynamicResource AppForegroundColor}" />
    </Style>

    <Style TargetType="TabbedPage">
        <Setter Property="BarBackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
        <Setter Property="BarTextColor" Value="{StaticResource Primary}" />
        <!-- Accent for selected -->
        <Setter Property="UnselectedTabColor" Value="{DynamicResource AppSecondaryTextColor}" />
        <Setter Property="SelectedTabColor" Value="{StaticResource Primary}" />
        <!-- Accent for selected -->
    </Style>

    <Style TargetType="Button">
        <Setter Property="FontSize" Value="14" />
        <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
        <!-- Theme text color -->
        <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
        <!-- Accent background -->
        <Setter Property="Padding" Value="14,10"/>
        <Setter Property="MinimumHeightRequest" Value="44"/>
        <Setter Property="MinimumWidthRequest" Value="44"/>
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="1.0" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Primary}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Pressed">
                        <VisualState.Setters>
                            <Setter Property="Scale" Value="0.95" />
                            <!-- Slightly darker primary color on press -->
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light='#3E1F9F', Dark='#4A25BC'}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <VisualState.Setters>
                            <Setter Property="TextColor" Value="{DynamicResource AppSecondaryTextColor}" />
                            <Setter Property="BackgroundColor" Value="{StaticResource Gray600}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

</ResourceDictionary>