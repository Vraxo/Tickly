<?xml version="1.0" encoding="utf-8" ?>
<!-- Views/AddTaskPopupPage.xaml -->
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:models="clr-namespace:Tickly.Models"
             xmlns:converters="clr-namespace:Tickly.Converters"
             xmlns:vm="clr-namespace:Tickly.Views"
             x:Class="Tickly.Views.AddTaskPopupPage"
             x:DataType="vm:AddTaskPopupPageViewModel"
             BackgroundColor="{DynamicResource AppBackgroundColor}"
             Title="{Binding PageTitle}">

    <ContentPage.Resources>
        <ResourceDictionary>
            <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
            <Style TargetType="Entry" x:Key="MinimalEntry">
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
                <Setter Property="PlaceholderColor" Value="{DynamicResource AppSecondaryTextColor}" />
                <Setter Property="BackgroundColor" Value="Transparent" />
                <Setter Property="Margin" Value="0,0,0,5" />
            </Style>
            <Style TargetType="Label" x:Key="SettingsLabelStyle" BasedOn="{StaticResource BaseLabelStyle}">
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}"/>
                <Setter Property="Margin" Value="0,0,0,2"/>
            </Style>
            <Style TargetType="RadioButton" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
                <Setter Property="BackgroundColor" Value="Transparent"/>
            </Style>
            <Style TargetType="DatePicker" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
                <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
                <Setter Property="Margin" Value="20,0,0,0"/>
            </Style>
            <Style TargetType="Picker" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
                <Setter Property="TitleColor" Value="{DynamicResource AppSecondaryTextColor}"/>
                <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
                <Setter Property="WidthRequest" Value="150"/>
            </Style>
            <Style x:Key="DeleteButton" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="BackgroundColor" Value="{StaticResource NordAurora0}" />
                <Setter Property="TextColor" Value="{DynamicResource NordPolarNight0}" />
                <Setter Property="HorizontalOptions" Value="Start"/>
            </Style>
            <Style x:Key="CancelButton" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="BackgroundColor" Value="{DynamicResource AppSurfaceColor}" />
                <Setter Property="TextColor" Value="{DynamicResource AppForegroundColor}" />
                <Setter Property="HorizontalOptions" Value="End"/>
            </Style>
            <Style x:Key="ConfirmButton" TargetType="Button" BasedOn="{StaticResource BaseStyle}">
                <Setter Property="BackgroundColor" Value="{DynamicResource AppPrimaryActionBackgroundColor}" />
                <Setter Property="TextColor" Value="{DynamicResource AppPrimaryActionForegroundColor}" />
                <Setter Property="HorizontalOptions" Value="End"/>
            </Style>
        </ResourceDictionary>
    </ContentPage.Resources>

    <ScrollView>
        <VerticalStackLayout Padding="20" Spacing="15">

            <!-- Task Title Input -->
            <Label Text="Task Title" Style="{StaticResource SettingsLabelStyle}"/>
            <Entry x:Name="TitleEntry"
                   Placeholder="Enter task title"
                   Text="{Binding Title}"
                   Style="{StaticResource MinimalEntry}" />

            <!-- Time / Repetition Type Selection -->
            <Label Text="Time / Repetition" Style="{StaticResource SettingsLabelStyle}"/>
            <VerticalStackLayout Spacing="5">
                <RadioButton GroupName="TimeTypeGroup" Content="None (Any time)"
                             IsChecked="{Binding IsTimeTypeNone}" />
                <RadioButton GroupName="TimeTypeGroup" Content="Specific Date"
                             IsChecked="{Binding IsTimeTypeSpecificDate}" />
                <RadioButton GroupName="TimeTypeGroup" Content="Repeating"
                              IsChecked="{Binding IsTimeTypeRepeating}" />
            </VerticalStackLayout>

            <!-- Specific Date Picker (Visible only when SpecificDate is selected) -->
            <DatePicker x:Name="DueDatePicker"
                        Date="{Binding DueDate}"
                        IsVisible="{Binding IsTimeTypeSpecificDate}" />

            <!-- Repetition Options Section (Visible only when Repeating is selected) -->
            <VerticalStackLayout Spacing="10" Margin="20,5,0,0"
                                 IsVisible="{Binding IsTimeTypeRepeating}">

                <Label Text="Repeat:" Style="{StaticResource SettingsLabelStyle}" TextColor="{DynamicResource AppSecondaryTextColor}"/>
                <HorizontalStackLayout Spacing="10" BindableLayout.ItemsSource="{Binding RepetitionTypeOptions}">
                    <BindableLayout.ItemTemplate>
                        <DataTemplate x:DataType="vm:SelectableOption(models:TaskRepetitionType)">
                            <RadioButton GroupName="RepetitionTypeGroup"
                                         IsChecked="{Binding IsSelected}"
                                         Content="{Binding Name}" />
                        </DataTemplate>
                    </BindableLayout.ItemTemplate>
                </HorizontalStackLayout>

                <!-- Day of Week Picker (Visible only for Weekly repetition) -->
                <StackLayout Orientation="Horizontal" Spacing="5" Margin="0,5,0,0"
                             IsVisible="{Binding IsWeeklySelected}">
                    <Label Text="On:" VerticalOptions="Center" Style="{StaticResource SettingsLabelStyle}" TextColor="{DynamicResource AppSecondaryTextColor}"/>
                    <Picker x:Name="DayOfWeekPicker"
                            Title="Select Day"
                            ItemsSource="{Binding DisplayDaysOfWeek}"
                            SelectedItem="{Binding SelectedDisplayDayOfWeek}" />
                </StackLayout>
            </VerticalStackLayout>

            <!-- Action Buttons -->
            <Grid ColumnDefinitions="Auto,*,Auto,Auto" ColumnSpacing="10" Margin="0,20,0,0">
                <Button Grid.Column="0" Text="Delete" Clicked="OnDeleteClicked" IsVisible="{Binding IsEditMode}" Style="{StaticResource DeleteButton}" />
                <Button Grid.Column="2" Text="Cancel" Clicked="OnCancelClicked" Style="{StaticResource CancelButton}" />
                <Button Grid.Column="3" Text="{Binding ConfirmButtonText}" Clicked="OnConfirmClicked" Style="{StaticResource ConfirmButton}" />
            </Grid>

        </VerticalStackLayout>
    </ScrollView>
</ContentPage>