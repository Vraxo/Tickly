<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:vm="clr-namespace:Tickly.ViewModels"
             xmlns:model="clr-namespace:Tickly.Models"
             x:Class="Tickly.Views.MainPage"
             x:DataType="vm:MainViewModel"
             Title="Tickly Tasks">

    <!--
    IMPORTANT: BindingContext is set in the MainPage.xaml.cs constructor via Dependency Injection.
               Do NOT uncomment or add a BindingContext declaration here.
    -->

    <Grid RowDefinitions="Auto, *, Auto" Padding="10">

        <!-- Progress Bar at the Top -->
        <ProgressBar Grid.Row="0"
                     Progress="{Binding TaskProgress}"
                     ProgressColor="{Binding TaskProgressColor}"
                     HeightRequest="10"
                     Margin="5, 10"/>

        <!-- List of Tasks -->
        <CollectionView Grid.Row="1"
                        ItemsSource="{Binding Tasks}"
                        SelectionMode="None"
                        EmptyView="No tasks yet! Add one below.">

            <CollectionView.ItemTemplate>
                <DataTemplate x:DataType="model:TaskItem">
                    <SwipeView Threshold="100" BackgroundColor="Transparent">
                        <SwipeView.RightItems>
                            <SwipeItems Mode="Execute">
                                <!-- Edit Swipe Item -->
                                <SwipeItem Text="Edit"
                                           BackgroundColor="LightGray"
                                           Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=NavigateToEditPageCommand}"
                                           CommandParameter="{Binding .}"/>

                                <!-- Done Swipe Item -->
                                <SwipeItem Text="Done"
                                           BackgroundColor="{Binding PositionColor}"
                                           Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=MarkTaskDoneCommand}"
                                           CommandParameter="{Binding .}"/>

                                <!-- Optional: Reset Daily Task (only makes sense if visible conditionaly) -->
                                <!-- You might need a more complex trigger or visibility converter -->
                                <!--
                                <SwipeItem Text="Reset"
                                           IsVisible="{Binding CanResetDaily}" // Need logic in TaskItem or converter
                                           BackgroundColor="Orange"
                                           Command="{Binding Source={RelativeSource AncestorType={x:Type vm:MainViewModel}}, Path=ResetDailyTaskCommand}"
                                           CommandParameter="{Binding .}"/>
                                -->
                            </SwipeItems>
                        </SwipeView.RightItems>

                        <!-- Main Content of the Task Item -->
                        <Border Stroke="{Binding PositionColor}"
                                StrokeThickness="4"
                                StrokeShape="RoundRectangle 4"
                                Padding="0" Margin="5, 5">
                            <Grid Padding="10, 5" ColumnDefinitions="*, Auto">
                                <VerticalStackLayout Grid.Column="0" Spacing="2">
                                    <Label Text="{Binding Title}"
                                           FontSize="Medium"
                                           FontAttributes="Bold"
                                           VerticalOptions="Center"/>
                                    <Label Text="{Binding DueDate, StringFormat='{0:ddd, MMM d}'}"
                                           FontSize="Small"
                                           TextColor="Gray"
                                           IsVisible="{Binding DueDate.HasValue}"
                                           VerticalOptions="Center"/>
                                </VerticalStackLayout>

                                <!-- Optional: Visual indicator like a checkmark if done today, etc. -->
                                <!-- <Image Grid.Column="1" Source="check.png" IsVisible="{Binding IsDoneToday}" /> -->

                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup Name="CommonStates">
                                        <VisualState Name="Normal"/>
                                        <VisualState Name="FadingOut">
                                            <VisualState.Setters>
                                                <Setter Property="Opacity" Value="0" />
                                                <!-- You might need an animation here -->
                                            </VisualState.Setters>
                                        </VisualState>
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                                <!-- Trigger the FadingOut state -->
                                <Grid.Triggers>
                                    <DataTrigger TargetType="Grid"
                                                  Binding="{Binding IsFadingOut}"
                                                  Value="True">
                                        <Setter Property="VisualStateManager.VisualStateGroups"
                                                 Value="{StaticResource CommonStates.FadingOut}"/>
                                    </DataTrigger>
                                </Grid.Triggers>
                            </Grid>
                        </Border>
                    </SwipeView>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>

        <!-- Add Task Button -->
        <Button Grid.Row="2"
                Text="Add New Task"
                Command="{Binding NavigateToAddPageCommand}"
                Margin="10"
                HorizontalOptions="Fill"/>

    </Grid>
</ContentPage>